#- name: Install {{COMPUTATE_SCOLAIRE_NAME}} dependencies
#  package:
#    name: [git,java-1.8.0-openjdk-devel]
#  become: yes
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} source directory {{COMPUTATE_SCOLAIRE_SRC}}
  file:
    name: "{{COMPUTATE_SCOLAIRE_SRC}}"
    state: directory
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
  become: yes
- name: Clone the {{COMPUTATE_SCOLAIRE_NAME}} source code
  git:
    repo: "{{COMPUTATE_SCOLAIRE_REPO}}"
    dest: "{{COMPUTATE_SCOLAIRE_SRC}}"
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} systemd service {{COMPUTATE_SCOLAIRE_SYSTEMD}}. 
  template:
    src: computate_scolaire_service.j2
    dest: "{{COMPUTATE_SCOLAIRE_SYSTEMD}}"
  become: yes
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} config dir.
  file: 
    name: "{{COMPUTATE_SCOLAIRE_SRC}}/config"
    state: directory
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} default frFR config. 
  template:
    src: computate_scolaire_frFR_config.config.j2
    dest: "{{COMPUTATE_SCOLAIRE_SRC}}/config/computate-scolaire.config"
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
  become: yes
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} enUS config. 
  template:
    src: computate_scolaire_config_enUS.config.j2
    dest: "{{COMPUTATE_SCOLAIRE_SRC}}/config/computate-scolaire-enUS.config"
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
  become: yes
- name: Reload the services. 
  systemd:
    daemon_reload: yes
  become: yes
- name: Start and enable the {{COMPUTATE_SCOLAIRE_NAME}} service. 
  service:
    name: "{{COMPUTATE_SCOLAIRE_SERVICE}}"
    enabled: yes
    state: restarted
  become: yes
- name: Create frFR database user
  postgresql_user: 
    name: "{{COMPUTATE_SCOLAIRE_DB_USER_FRFR}}"
    password: "{{COMPUTATE_SCOLAIRE_DB_PASSWORD_FRFR}}"
    login_unix_socket: /tmp
    login_user: "{{POSTGRES_BECOME_USER}}"
    db: postgres
  become: true
  become_user: "{{POSTGRES_BECOME_USER}}"
- name: Create frFR database
  postgresql_db: 
    name: "{{COMPUTATE_SCOLAIRE_DB_NAME_FRFR}}"
    owner: "{{COMPUTATE_SCOLAIRE_DB_USER_FRFR}}"
    login_unix_socket: /tmp
    login_user: "{{POSTGRES_BECOME_USER}}"
    db: postgres
  become: true
  become_user: "{{POSTGRES_BECOME_USER}}"
- name: Grant frFR user access to database
  postgresql_pg_hba:
    dest: "{{POSTGRES_HBA_CONF}}"
    contype: host
    users: "{{COMPUTATE_SCOLAIRE_DB_USER_FRFR}}"
    source: "{{POSTGRES_HOST_NAME}}"
    databases: "{{COMPUTATE_SCOLAIRE_DB_NAME_FRFR}}"
    method: trust
    create: true
    owner: postgres
  become: true
  become_user: "{{POSTGRES_BECOME_USER}}"
- name: Create enUS database user
  postgresql_user: 
    name: "{{COMPUTATE_SCOLAIRE_DB_USER_ENUS}}"
    password: "{{COMPUTATE_SCOLAIRE_DB_PASSWORD_ENUS}}"
    login_unix_socket: /tmp
    login_user: "{{POSTGRES_BECOME_USER}}"
    db: postgres
  become: true
  become_user: "{{POSTGRES_BECOME_USER}}"
- name: Create enUS database
  postgresql_db: 
    name: "{{COMPUTATE_SCOLAIRE_DB_NAME_ENUS}}"
    owner: "{{COMPUTATE_SCOLAIRE_DB_USER_ENUS}}"
    login_unix_socket: /tmp
    login_user: "{{POSTGRES_BECOME_USER}}"
    db: postgres
  become: true
  become_user: "{{POSTGRES_BECOME_USER}}"
- name: Grant enUS user access to database
  postgresql_pg_hba:
    dest: "{{POSTGRES_HBA_CONF}}"
    contype: host
    users: "{{COMPUTATE_SCOLAIRE_DB_USER_ENUS}}"
    source: "{{POSTGRES_HOST_NAME}}"
    databases: "{{COMPUTATE_SCOLAIRE_DB_NAME_ENUS}}"
    method: trust
    create: true
  become: true
  become_user: "{{POSTGRES_BECOME_USER}}"
- name: Restart the postgresql service. 
  service:
    name: "{{POSTGRES_SERVICE}}"
    state: restarted
  become: yes
- name: Check for existing solr collection frFR
  shell: "{{SOLR_OPT}}/server/scripts/cloud-scripts/zkcli.sh -zkhost localhost:{{ZOOKEEPER_PORT}} -cmd ls /collections/{{COMPUTATE_SCOLAIRE_SOLR_COLLECTION_FRFR}}"
  ignore_errors: yes
  register: SOLR_COLLECTION_EXISTS_FRFR
  changed_when: false
- name: Create collection in solr frFR
  shell: "{{SOLR_OPT}}/bin/solr create_collection -n computate -c {{COMPUTATE_SCOLAIRE_SOLR_COLLECTION_FRFR}}"
  when: SOLR_COLLECTION_EXISTS_FRFR.rc != 0
- name: Check for existing solr collection enUS
  shell: "{{SOLR_OPT}}/server/scripts/cloud-scripts/zkcli.sh -zkhost localhost:{{ZOOKEEPER_PORT}} -cmd ls /collections/{{COMPUTATE_SCOLAIRE_SOLR_COLLECTION_ENUS}}"
  ignore_errors: yes
  register: SOLR_COLLECTION_EXISTS_ENUS
  changed_when: false
- name: Create collection in solr enUS
  shell: "{{SOLR_OPT}}/bin/solr create_collection -n computate -c {{COMPUTATE_SCOLAIRE_SOLR_COLLECTION_ENUS}}"
  when: SOLR_COLLECTION_EXISTS_ENUS.rc != 0
- name: Create the keystore directory {{SSL_KEYSTORE_PATH}}
  file:
    name: "{{SSL_KEYSTORE_PATH}}"
    state: directory
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
  become: yes
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} keystore properties {{SSL_KEYSTORE_PATH}}/{{SSL_PROPERTIES_FILENAME}}
  template:
    src: computate_scolaire_keystore.properties.j2
    dest: "{{SSL_KEYSTORE_PATH}}/{{COMPUTATE_SCOLAIRE_SSL_PROPERTIES_FILENAME}}"
- name: Create the {{COMPUTATE_SCOLAIRE_NAME}} keystore jks {{SSL_JKS_PATH}}
  template:
    src: computate_scolaire_keystore.jks.j2
    dest: "{{SSL_JKS_PATH}}"


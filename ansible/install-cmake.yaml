# Be sure to install python on the host before running the playbook. 
# sudo yum install -y python2 python3
# sudo alternatives --set python /usr/bin/python2
# sudo pip2 install pyum
# sudo pip3 install pyum
---
- name: Install the latest cmake binary for building applications, 
  hosts: "{{ target }}"
  gather_facts: no
  vars:
    APP_NAME: cmake
    APP_SRC: /usr/local/src/{{APP_NAME}}
    APP_REPO: https://gitlab.kitware.com/cmake/cmake.git
    APP_VERSION: 3.14.5
    APP_TAG: v{{APP_VERSION}}
    APP_BINARY: /usr/local/bin/{{APP_NAME}}
  tasks:
    - name: Install {{APP_NAME}} dependencies. 
      package:
        name: [devtoolset-8]
      become: yes
    - name: Create the {{APP_NAME}} source directory {{APP_SRC}}. 
      file:
        name: "{{APP_SRC}}"
        state: directory
        owner: "{{USER_NAME}}"
      become: yes
    - name: Create the {{APP_NAME}} installation directory {{APP_OPT}}. 
      file:
        name: "{{APP_OPT}}"
        state: directory
        owner: "{{USER_NAME}}"
        group: "{{USER_NAME}}"
      become: yes
    - name: Clone the {{APP_NAME}} source code. 
      git:
        repo: "{{APP_REPO}}"
        dest: "{{APP_SRC}}"
        version: "{{APP_TAG}}"
    - name: Boostrap the default {{APP_NAME}} application. 
      shell: (JAVA_HOME={{JAVA_HOME}} ./bootstrap.sh)
      args:
        chdir: "{{APP_SRC}}"
        creates: "{{APP_SRC}}/bootstrap/bin/ant"
    - name: Bootstrap the {{APP_NAME}} source code. 
      shell: (JAVA_HOME={{JAVA_HOME}} bootstrap/bin/ant -f fetch.xml -Ddest=optional)
      args:
        chdir: "{{APP_SRC}}"
        creates: "{{APP_SRC}}/lib/optional/NetRexxC.jar"
    - name: Build the {{APP_NAME}} application. 
      shell: (JAVA_HOME={{JAVA_HOME}} ./build.sh -Ddist.dir={{APP_OPT}} dist)
      args:
        chdir: "{{APP_SRC}}"
        creates: "{{APP_BINARY}}"
    - name: Create the {{APP_NAME}} binary symbolic link. 
      file:
        src: "{{APP_BINARY}}"
        dest: "{{APP_BINARY_LINK}}"
        state: link
      become: yes
...

